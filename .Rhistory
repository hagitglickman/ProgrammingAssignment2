makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinv <- function(inv) m <<- inv
getinv <- function() m
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
cacheSolve <- function(x, ...) {
m <- x$getinv()
if(!is.null(m)) {
message("getting cached data: ",m)
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinv(m)
message("getting calculated data: ",m)
}
x <- cbind(c(3,0,0),c(0,3,0),c(0,0,3))
V_x<-cacheSolve(x)
setwd("~/GitHub/ProgrammingAssignment2")
V_x<-cacheSolve(x)
V_x<-makeCacheMatrix(x)
V_x<-cachesolve(makeCacheMatrix(x))
V_x<-cacheSolve(makeCacheMatrix(x))
V_x<-cacheSolve(makeCacheMatrix(x))
V_x<-cacheSolve(makeCacheMatrix(x))
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinv <- function(inv) m <<- inv
getinv <- function() m
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
cacheSolve <- function(x, ...) {
m <- x$getinv()
if(!is.null(m)) {
message("getting cached data: ",m)
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinv(m)
message("getting calculated data: ",m)
}
x <- cbind(c(3,0,0),c(0,3,0),c(0,0,3))
makeCacheMatrix(x)
V_x<-cacheSolve(x)
V_x<-cacheSolve(makeCacheMatrix(x))
V_x<-cacheSolve(makeCacheMatrix(x))
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinv <- function(inv) m <<- inv
getinv <- function() m
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
cacheSolve <- function(x, ...) {
m <- x$getinv()
if(!is.null(m)) {
message("getting cached data: ",m)
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinv(m)
message("getting calculated data: ",m)
}
x <- cbind(c(3,0,0),c(0,3,0),c(0,0,3))
V_x<-cacheSolve(makeCacheMatrix(x))
cacheSolve <- function(x, ...) {
m <- x$getinv()
if(!is.null(m)) {
message("getting cached data: ",m)
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinv(m)
message("getting calculated data: ",m)
return(m)
}
V_x<-cacheSolve(makeCacheMatrix(x))
V_x<-cacheSolve(makeCacheMatrix(x))
cacheSolve(makeCacheMatrix(x))
cacheSolve(makeCacheMatrix(x))
cacheSolve(makeCacheMatrix(x))
debugSource("~/My R/Ass2.R")
x <- cbind(c(3,0,0),c(0,3,0),c(0,0,3))
cacheSolve(makeCacheMatrix(x))
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinv <- function(inv) m <<- inv
getinv <- function() m
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
cacheSolve <- function(x, ...) {
m <- x$getinv()
if(!is.null(m)) {
message("getting cached data: ",m)
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinv(m)
message("getting calculated data: ",m)
return(m)
}
cacheSolve(makeCacheMatrix(x))
cacheSolve(makeCacheMatrix(x))
cacheSolve(makeCacheMatrix(x))
